<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picClean.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAA7tJREFUaEPt
        mctqFEEUhjPJXDIXJkO8gAmEoIgrEbxtdOHaF3AhCCquXItLd67ixkWycBNFfBFBUBBd6FNE8RIxIebi
        95+pamp0kkzfZiL2Bz+n+3RPVZ06VdXVPWMFBQUFBX3ooOnu4b/Nzvj4+I7s5OSk7K9KpfLUrgyBFbRd
        KpWsAc5uq0ETExOyJvzbuo5W0W5EgXgpIAn/JueHUD5Uq9VvmJ7K9xI9LNsXdUIYSLlcjs59R6GvKHuo
        bB0TVb6fuF+ZGQgyeosAfnLYU0a9Xpc9jTKl1Ww2VejM1NTUOexsp9OZn5ube+N6v0f4Bg4koExAqz47
        BOjLy33+LCgIVajKw+GCkgTiOYn8XNthWMs+QrlwNew5tEWGzujc+3RTGpj8m390znX5s6SGogqo7Iec
        cBx5f5qMRFD2d4yVqUUBW5E/E2q1mvW4hlW4Ork5ZJUmnCN9cdm1Fc0Ns/Q0Go0HGCvYaRx5TiDvzywQ
        qCgbwdJ8w7xp8L0j0esvzOkgyLOY6Lp8WUG9zzFWrgsoFedViLTLZJ5HvrIsM2Jo4vus0IkXut4EkN4t
        BaA0o7+WQ+ZItGpxPfNA4L6bk1pgUpXve1u2H8eQKpA25MgYzUdrg1MitOztF0juuEz7QPQYiAfL3jLG
        F/BBvlFAO15jrB0Mr8fmjANz4yXGCmCcLphzBLAyPsFYOxgZ780Zk0/IZ0TPi1FxGFk7COqzeeJA9OH7
        yKx8IyLaBtEmbV9io+h9IKfkGBFHkG+HRkk8iP4Vxgpgr7VozhHA/NQE9+14a844UEC4an2Ub0S8Q9YO
        FqAl88Qkeo5QQB5P7YFgZITPkap8SbACKEw23PUOizLyQUjJ0P5GQbj9zsOud3i4B6DvyOSBwEVtGrUL
        lZxvaKgDXb3alF7qehNCYeEY1VN2WERP9Ew6kYzcVGq9cCWecDGoKhvBkLpj3rTw3mGFBqnOFQ1nvQOp
        rlarlWl9bRWOtY8BBLTXd960rKGoLmxTzsyo1+v3/MRTUMpO90p2KOv6YsOhiTru2oUcWHJ/C5ioWAvB
        UV1IifZT9qUfa6KznulCbhDIsip0GfEBfcHq4RUX7R5WlAmVGWSj52tNnlxWpZqQHJvcHFonwNu6YQ9K
        3HsNrSkAzk0qq91u6/iKbhomtMPeD6whmpgKxv01EPWu/Gqw9/tz/7vgWH8sjZRpsrARju9B5P+xIvgt
        zvUWeHCgUYsKikMb837o6Vg9H8wrfXXX3q2EDjzaLTeQ3vdnULbPg4KCgv+RsbHf1Hd+vaIMXbYAAAAA
        SUVORK5CYII=
</value>
  </data>
</root>